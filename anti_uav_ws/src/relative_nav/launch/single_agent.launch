<launch>

  <arg name="mav_name" default="mikey"/>
  <arg name="x"   default="0.0"/>
  <arg name="y"   default="0.0"/>
  <arg name="yaw" default="0.0"/>
  <arg name="z"   default="0.08"/>
  <arg name="color" default="White"/>
  <arg name="path" default="1"/>
  <arg name="starting_node_id" default="0"/>

<!-- Load Global Parameters -->
<rosparam command="load" file="$(find relative_nav)/param/$(arg mav_name).yaml"/>

 <!-- Set Up MAV -->
 <group ns="$(arg mav_name)">
   <rosparam subst_value="True">
     attitude_controller:     { robot_namespace: $(arg mav_name) }
     truth:                   { always_flying: true }
     xbox:                    { dev: /dev/input/js4,
                                autorepeat_rate: 50 }
     rc:                      { axis_roll: 0,
                                axis_pitch: 1,
                                axis_thrust: 2,
                                axis_yaw: 4,
                                thrust_to_mass_ratio: 1.8 }
     simple_planner:          { world: $(arg path),
                                threshold: 1.0 }
     obstacle_avoidance:      { max_velocity_command: 5.0 }
     velocity_planner:        { max_velocity: 1.0 }
   </rosparam>

   <!-- Spawn in Gazebo -->
   <!-- rosparam command="load" file="$(find fcu_sim)/param/$(arg mav_name)_physical_params.yaml"/-->
   <include file="$(find fcu_sim)/launch/spawn_mav.launch">
     <arg name="mav_name"            value="$(arg mav_name)" />
     <arg name="model"               value="$(find fcu_sim)/urdf/$(arg mav_name)/$(arg mav_name)_base.xacro" />
     <arg name="enable_ground_truth" value="true" />
     <arg name="x"                   value="$(arg x)"/>
     <arg name="y"                   value="$(arg y)"/>
     <arg name="z"                   value="$(arg z)"/>
     <arg name="yaw"                 value="$(arg yaw)"/>
     <arg name="color"               value="$(arg color)"/>
   </include>


   <!-- Autopilot - to be moved into a gazebo plugin --
   <rosparam command="load" file="$(find attitude_controller)/param/$(arg mav_name)_gains.yaml"/>
   <node name="attitude_controller" pkg="attitude_controller" type="attitude_controller_node"/>

   <!-- Velocity Controller --
   <rosparam command="load" file="$(find rotor_controller)/param/$(arg mav_name).yaml"/>
   <node name="pid_controller"      pkg="rotor_controller"    type="rotor_controller_pid"/>

   <!--Joystick -->
   <!-- <rosparam command="load" file="$(find joy_commander)/params/RF.yaml"/> -->
   <!-- <node name="xbox"                pkg="joy"                 type="joy_node"/> -->
   <!-- <node name="rc"  pkg="ros_copter" type="rc_joy"/> -->
   <!-- <node name="planner_toggle"      pkg="joy_commander"        type="path_planner_toggle_node"/> -->
   <!-- <node name="joy_commander"        pkg="joy_commander"        type="joy_commander_node"/> -->

   <!-- Path Planning --
   <node name="simple_planner" pkg="simple_planner" type="simple_planner_node">
     <rosparam command="load" file="$(find simple_planner)/paths/$(arg mav_name).yaml"/>
   </node>
   <node name="velocity_planner"    pkg="velocity_planner"    type="velocity_planner_node"/>
   <node name="obstacle_avoid" pkg="obstacle_avoidance" type="obstacle_avoidance" output="screen" />

  <!-- Truth --
  <node name="truth" pkg="rotor_estimator" type="truth">
    <param name="use_vo_keyframes" value="true"/>
    <param name="starting_node_id" value="$(arg starting_node_id)"/>
    <remap from="pose" to="ground_truth/pose_with_covariance"/>
  </node>

  <!-- Estimator --
  <!-- <node name="start_trigger"       pkg="rmekf"               type="start_trigger.py"/> -->
  <!-- <node name="rmekf"               pkg="rmekf"               type="rmekf_node">
    <rosparam command="load" file="$(find rmekf)/params/estimator.yaml" />
    <remap from="imu/data" to="imu"/>
  </node> -->

  <!-- DEMO-RGBD --
  <node name="image_proc" pkg="image_proc" type="image_proc">
    <remap from="image_raw" to="camera/rgb/image_raw"/>
    <remap from="image_mono" to="camera/rgb/image_mono"/>
  </node>
  <include file="$(find demo_rgbd)/demo_rgbd.launch">
    <arg name="rgb" value="/$(arg mav_name)/camera/rgb/image_mono"/>
    <arg name="depth" value="/$(arg mav_name)/camera/depth/image_raw"/>
    <arg name="imu" value="imu"/>
  </include>
  <node name="vo_cmu_relay" pkg="vo_cmu_relay" type="vo_cmu_relay_node" output="screen">
    <remap from="low_rate"  to="bef_ba_to_init"/>
    <remap from="high_rate" to="cam_to_init"/>
    <remap from="/camera/depth/image" to="camera/depth/image_raw"/>
    <remap from="/camera/rgb/image_color" to="camera/rgb/image_raw"/>
    <param name="starting_keyframe_id" value="$(arg starting_node_id)"/>
  </node>


  <!-- Backend Hooks --
  <node name="keyframe_relay" pkg="topic_tools" type="relay" args="keyframe /keyframe"/>
  <node name="edge_relay" pkg="topic_tools" type="relay" args="edge /edge"/>
  <node name="is_flying_relay" pkg="topic_tools" type="relay" args="is_flying /is_flying"/>
  <node name="node_relay" pkg="topic_tools" type="relay" args="node /node"/>
-->

</group>

</launch>
