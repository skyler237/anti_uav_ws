<launch>

  <!--
  ADAPTIVE_RADIUS_STRATEGY 1
  PRONAV_STRATEGY 2
  PREDICTIVE_WAYPOINTS_STRATEGY 3 -->
  <arg name="intercept_strategy" default="3"/>
  <arg name="path_type" default="random"/>


  <arg name="fleet_name" default="fleet"/>
  <arg name="intruding_uav_name" default="intruder"/>
  <arg name="net"  default="net"/>
  <arg name="net_size" default="6.0"/>
  <arg name="net_size_half" default="3.0"/>

  <arg name="world_file" default="fast_basic.world"/>
  <!-- <arg name="world_file" default="basic.world"/> -->

  <arg name="fleet_x_P" value="1.0"/>
  <arg name="fleet_x_I" value="0.06"/>
  <arg name="fleet_x_D" value="1.0"/>

  <arg name="fleet_y_P" value="1.0"/>
  <arg name="fleet_y_I" value="0.08"/>
  <arg name="fleet_y_D" value="1.0"/>

  <arg name="fleet_z_P" value="1.0"/>
  <arg name="fleet_z_I" value="0.05"/>
  <arg name="fleet_z_D" value="1.0"/>


  <!-- Start Simulator -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find fcu_sim)/worlds/$(arg world_file)"/>
    <arg name="paused" value="true"/>
    <arg name="gui" value="false"/>
  </include>

<!-- Set Up Fleet (net and 4 drones) and intruder -->
  <include file="$(find anti_uav)/launch/launch_models.launch">
    <arg name="fleet_name" value="$(arg fleet_name)"/>
    <arg name="intruding_uav_name" value="$(arg intruding_uav_name)"/>
    <arg name="net_size" value="$(arg net_size)"/>
    <arg name="net_size_half" value="$(arg net_size_half)"/>

    <arg name="fleet_x_P" value="$(arg fleet_x_P)"/>
    <arg name="fleet_x_I" value="$(arg fleet_x_I)"/>
    <arg name="fleet_x_D" value="$(arg fleet_x_D)"/>

    <arg name="fleet_y_P" value="$(arg fleet_y_P)"/>
    <arg name="fleet_y_I" value="$(arg fleet_y_I)"/>
    <arg name="fleet_y_D" value="$(arg fleet_y_D)"/>

    <arg name="fleet_z_P" value="$(arg fleet_z_P)"/>
    <arg name="fleet_z_I" value="$(arg fleet_z_I)"/>
    <arg name="fleet_z_D" value="$(arg fleet_z_D)"/>
  </include>

  <!-- Simulation Anaylsis and Intercept Testing -->
    <node name="sim_analysis" pkg="anti_uav" type="sim_analysis" output="screen">
      <param name="net_width" value="$(arg net_size)"/>
      <!-- <param name="world_name" value="$(find fcu_sim)/worlds/$(arg world_file)"/> -->

      <param name="intruder_name" value="$(arg intruding_uav_name)"/>
      <param name="intruder_reset_x" value="130.0"/>
      <param name="intruder_reset_y" value="0.0"/>
      <param name="intruder_reset_z" value="35.0"/>

      <param name="fleet_reset_x" value="0.0"/>
      <param name="fleet_reset_y" value="0.0"/>
      <param name="fleet_reset_z" value="0.0"/>

      <param name="uav1_name" value="$(arg fleet_name)_uav1"/>
      <param name="uav2_name" value="$(arg fleet_name)_uav2"/>
      <param name="uav3_name" value="$(arg fleet_name)_uav3"/>
      <param name="uav4_name" value="$(arg fleet_name)_uav4"/>

      <remap from="intruder_pose" to="$(arg intruding_uav_name)/ground_truth/odometry"/>
      <remap from="uav1_pose" to="$(arg fleet_name)/uav1/ground_truth/odometry"/>
      <remap from="uav2_pose" to="$(arg fleet_name)/uav2/ground_truth/odometry"/>
      <remap from="uav3_pose" to="$(arg fleet_name)/uav3/ground_truth/odometry"/>
      <remap from="uav4_pose" to="$(arg fleet_name)/uav4/ground_truth/odometry"/>
    </node>

  <node name="fleet_rc" pkg="anti_uav" type="fleet_joy">
      <param name="max_roll_rate" value="0.5*M_PI/180.0"/>
      <param name="max_pitch_rate" value="0.5*M_PI/180.0"/>
      <param name="max_yaw_rate" value="0.5*M_PI/180.0"/>
      <remap from="fleet_goal" to="bleh"/>
  </node>
  <node name="joy" pkg="joy" type="joy_node">
    <param name="autorepeat_rate" value="100"/>
  </node>

  <!-- Waypoint Manager -->
  <node name="waypoint_manager" pkg="ros_copter" type="waypoint_manager.py">
    <param name="namespace" value="$(arg intruding_uav_name)"/>
    <!-- Possible Types: file, random, straight -->
    <param name="path_type" value="$(arg path_type)"/>
    <param name="waypoint_filename" value="/home/skyler/waypoints.csv"/>
  </node>

  <!-- Intercept Controller -->
  <node name="intercept_controller" pkg="anti_uav" type="intercept_controller" output="screen">
    <param name="max_velocity" value="10.0"/>
    <param name="max_acceleration" value="4.0"/>
    <param name="max_yaw_rate" value="0.00"/>
    <param name="distance_start_rotation" value="40"/>
    <param name="distance_finish_rotation" value="10"/>
    <param name="fleet_square_width" value="$(arg net_size)"/>
    <param name="flyby_distance" value="10"/>
    <param name="takeoff_height" value="$(arg net_size)"/>
    <param name="takeoff_velocity" value="10"/>
    <param name="vel_control_constant" value="3.0"/>

    <!-- TESTING!!!! -->
    <param name="position_error" value="15.0"/>

    <param name="exp_avg_alpha0" value="0.05"/>
    <param name="full_response_radius" value="10"/>
    <!--
     TARGET_CALLBACK 1
     COMPUTE_CONTROL 2
     PLAN_PATH 4
     COMPUTE_FLEET_STATE 8
     TARGET_PREDICT 16
     ADAPTIVE RADIUS 32-->
    <param name="debug_print" value="0"/>

    <!--
     DIRECT 0
     WAYPOINT 1-->
    <param name="path_type" value="1"/>

    <!--
    ADAPTIVE_RADIUS_STRATEGY 1
    PRONAV_STRATEGY 2
    PREDICTIVE_WAYPOINTS_STRATEGY 3 -->
    <param name="intercept_strategy" value="$(arg intercept_strategy)"/>

    <!-- Protection radius also acts as max radius -->
    <param name="protection_radius" value="60"/>
    <param name="minimum_radius" value="40"/>
    <param name="control_delay" value="1.0"/>

    <remap from="estimate" to="fleet_goal"/>
    <remap from="target" to="$(arg intruding_uav_name)/ground_truth/odometry"/>
    <remap from="uav1_pose" to="$(arg fleet_name)/uav1/ground_truth/odometry"/>
    <remap from="uav2_pose" to="$(arg fleet_name)/uav2/ground_truth/odometry"/>
    <remap from="uav3_pose" to="$(arg fleet_name)/uav3/ground_truth/odometry"/>
    <remap from="uav4_pose" to="$(arg fleet_name)/uav4/ground_truth/odometry"/>
  </node>

  <!-- Fleet Coordinator -->
  <node name="fleet_coordinator" pkg="anti_uav" type="fleet_coordinator">
    <!-- <remap from="fleet_goal" to="$(arg intruding_uav_name)/ground_truth/odometry"/> -->
    <param name="square_length" value="$(arg net_size)"/>
  </node>

</launch>
